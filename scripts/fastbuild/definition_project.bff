
.Properties = .EmptyProperties

// Global structure of public project properties
.ProjectPropertiesStruct = [ ]

// Build final project structures for each project in the list
ForEach( .Project in .Projects )
{
    .Public = []
    .Private = []

    .Tags = { }
    .Requires = { }

    // Miscelaneous
    .AllowUnityBuilds = true
    .CopyModules = false
    .DependsOn = []

    .Group = .DefaultGroup

    .InputPaths = {
        'private'
    }
    .VStudioPaths = {
        'resource'
        'natvis'
        'public'
    } + .InputPaths

    .DebugDir = '$WorkspaceBuildDir$'

    .Rules = { }

    .UnitTests =
    [
        .Enabled = false
        .Arguments = ''
    ]

    Using( .Project )

    .Deploy =
    [
        .Executable = ''
        .Arguments = ''
        .Inputs = { }
    ]

    .ResolvedProject =
    [
        .ProjectName = .Name
        .ProjectKind = .Kind
        .ProjectTags = .Tags
        .ProjectBaseDir = .BaseDir
        .ProjectRequires = .Requires
        .ProjectGroup = ^Group
        .ProjectDebugDir = .DebugDir
        .ProjectAllowUnityBuilds = .AllowUnityBuilds

        .ProjectSourcePaths = { }
        ForEach( .Path in .InputPaths )
        {
            ^ProjectSourcePaths + "$ProjectBaseDir$/$Path$"
        }

        .ProjectVStudioInputPaths = { }
        ForEach( .Path in .VStudioPaths )
        {
            ^ProjectVStudioInputPaths + "$ProjectBaseDir$/$Path$"
        }

        .Rule_DefaultInternal =
        [
            .RuleName = "$Name$_DefaultRule"
            .RuleRequires = { }
            .RuleDependsOn = ^DependsOn
            .RuleUnitTests = .UnitTests
            .RuleDeploy = .Deploy

            .RuleProperties_Public =
            [
                Using( .Properties )
                Using( .Public )

                .IncludeDirs + {
                    '$ProjectBaseDir$/public'
                }
            ]
            .RuleProperties_Private =
            [
                Using( .Properties )
                Using( .Private )

                .IncludeResDirs + {
                    '$ProjectBaseDir$/resource'
                }

                .CopyModules = ^CopyModules
            ]
        ]

        .ProjectRules = { .Rule_DefaultInternal }

        ForEach( .Rule in .Rules )
        {
            .Kind = .Kind_None
            .Requires = { }
            .DependsOn = []
            .Public = []
            .Private = []

            Using( .Rule )

            .ResolvedRule =
            [
                .RuleName = .Name
                .RuleKind = .Kind
                .RuleRequires = .Requires
                .RuleDependsOn = .DependsOn
                .RuleUnitTests = .UnitTests
                .RuleDeploy = .Deploy

                .RuleProperties_Public =
                [
                    Using( .Properties )
                    Using( .Public )
                ]
                .RuleProperties_Private =
                [
                    Using( .Properties )
                    Using( .Private )

                    .CopyModules = ^CopyModules
                ]
            ]
            ^ProjectRules + .ResolvedRule
        }
    ]

    ^ProjectsResolved + .ResolvedProject
}
