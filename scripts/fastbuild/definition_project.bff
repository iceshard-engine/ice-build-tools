
.Properties = .EmptyProperties

// Global structure of public project properties
.ProjectPropertiesStruct = [ ]

// Build final project structures for each project in the list
ForEach( .Project in .Projects )
{
    .Public = []
    .Private = []

    .Tags = { }
    .Requires = { }

    // Miscelaneous
    .AllowUnityBuilds = true
    .CopyModules = false
    .DependsOn = []
    .LocalCompiler = []

    .Group = .DefaultGroup

    .InputPaths = {
        'private'
    }
    .IncludePaths = {
        'public'
    }
    .ResourcePaths = {
        'resource'
        'metadata'
    }
    .VStudioPaths = .InputPaths
        + .IncludePaths
        + .ResourcePaths
        + 'natvis'

    .DebugDir = '$WorkspaceBuildDir$'

    .Rules = { }
    .Tasks = { }

    .UnitTests =
    [
        .Enabled = false
        .Arguments = ''
    ]

    .Android = [ ]
    .Deploy = false
    .ScriptFile = .EmptyString

    Using( .Project )

    If ( .ScriptFile == .EmptyString )
    {
        ^ScriptFile = "$Name$.bff"
    }

    .ResolvedProject =
    [
        .ProjectName = .Name
        .ProjectScriptFile = .ScriptFile
        .ProjectKind = .Kind
        .ProjectTags = .Tags
        .ProjectBaseDir = .BaseDir
        .ProjectDeploy = .Deploy
        .ProjectLocalCompiler = .LocalCompiler

        // #TODO (#4): https://github.com/iceshard-engine/ice-build-tools/issues/4
        .ProjectRequires = .Requires
        .ProjectGroup = ^Group
        .ProjectDebugDir = .DebugDir
        .ProjectAllowUnityBuilds = .AllowUnityBuilds

        .ProjectSourcePaths = { }
        ForEach( .Path in .InputPaths )
        {
            ^ProjectSourcePaths + "$ProjectBaseDir$/$Path$"
        }

        .ProjectIncludePaths = { }
        ForEach( .Path in .IncludePaths )
        {
            ^ProjectIncludePaths + "$ProjectBaseDir$/$Path$"
        }

        .ProjectResourcePaths = { }
        ForEach( .Path in .ResourcePaths )
        {
            ^ProjectResourcePaths + "$ProjectBaseDir$/$Path$"
        }

        .ProjectVStudioInputPaths = { }
        ForEach( .Path in .VStudioPaths )
        {
            ^ProjectVStudioInputPaths + "$ProjectBaseDir$/$Path$"
        }

        // Additional platform specific information
        .ProjectAndroid = .Android

        // Special tasks set-up for the project.
        // See documentation of particular platforms to set these up.
        .ProjectTasks = .Tasks

        .Rule_DefaultInternal =
        [
            .RuleName = "$Name$_DefaultRule"
            .RuleRequires = { }
            .RuleDependsOn = ^DependsOn
            .RuleUnitTests = .UnitTests

            .RuleProperties_Public =
            [
                Using( .Properties )
                Using( .Public )

                ^ProjectRequires + .Uses

                .IncludeDirs + .ProjectIncludePaths
            ]
            .RuleProperties_Private =
            [
                Using( .Properties )
                Using( .Private )

                ^ProjectRequires + .Uses

                .IncludeResDirs + .ProjectResourcePaths
                .CopyModules = ^CopyModules
            ]
        ]

        .ProjectRules = { .Rule_DefaultInternal }

        ForEach( .Rule in .Rules )
        {
            .Kind = .Kind_None
            .Requires = { }
            .DependsOn = []
            .Public = []
            .Private = []

            Using( .Rule )

            .ResolvedRule =
            [
                .RuleName = .Name
                .RuleKind = .Kind
                .RuleRequires = .Requires
                .RuleDependsOn = .DependsOn
                .RuleUnitTests = .UnitTests
                .RuleDeploy = .Deploy

                .RuleProperties_Public =
                [
                    Using( .Properties )
                    Using( .Public )
                ]
                .RuleProperties_Private =
                [
                    Using( .Properties )
                    Using( .Private )

                    .CopyModules = ^CopyModules
                ]
            ]
            ^ProjectRules + .ResolvedRule
        }
    ]

    ^ProjectsResolved + .ResolvedProject
}
