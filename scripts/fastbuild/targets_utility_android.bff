
// Minium required version
.BFFVersion_TextFile = 100

If ( ._FASTBUILD_VERSION_ < .BFFVersion_TextFile )
{
    Print( "[IBT] DevEnv targets are not available. Missing 'TextFile' function introduced in version: $BFFVersion_TextFile$." )
}

If ( ._FASTBUILD_VERSION_ >= .BFFVersion_TextFile )
{
    .SolutionConfigs = { }

    .ProjectLibs =
    [
        .List = { }
    ]
    .ProjectConfigs = { }
    .HasAnyConfig = false

    Print( '[IBT] Creating android targets...' )

    ForEach( .Pipeline in .AvailablePipelines )
    {
        Using( .Pipeline )
        Using( .PipelinePlatformInfo )
        Using( .PipelineToolchainInfo )

        If ( .PipelinePlatform == 'Android' )
        {
            .PipelineID = '$PipelineName$-$PipelinePlatform$-$PipelineConfig$-NDK$NDKVersion$'
            .ProjectLibsExt =
            [
                .List = { '$PipelineID$' }
                .'Libs_$PipelineID$' = { }
            ]
            ^ProjectLibs + .ProjectLibsExt
        }

        ^HasAnyConfig = true
    }

    If ( .HasAnyConfig )
    {
        .SolutionHasAppProjects = false
        .PipelineEnabledProjects = { }
        .PipelineAvailableProjects = [ ]
        .PipelineVSInfo = [ ]

        ForEach( .Project in .ProjectsResolved )
        {
            Using( .Project )

            // On Android the native part of an app is always a shared library
            If ( .ProjectKind == .Kind_SharedLib )
            {
                .ProjectBasePath = .ProjectBaseDir

                ForEach( .Pipeline in .AvailablePipelines )
                {
                    .VSSuffix = ''
                    .VSEnabled = false
                    .PipelineProjectRequirements = { }

                    Using( .Pipeline )
                    Using( .PipelineVSInfo )
                    Using( .PipelinePlatformInfo )
                    Using( .PipelineToolchainInfo )
                    Using( .PipelineOutputExtensions )

                    // Check if we the project has all requirements covered
                    .ProjectRequirementsSatisfied = false
                    .GradleProjectRequirementsSatisfied = false
                    {
                        .PipelineIdentifier = '$PipelineName$-$PipelinePlatform$-$PipelineConfig$-$PipelineToolchain$'
                        .'PipelineAvailableProjects_$PipelineIdentifier$' = { }

                        Using( .PipelineAvailableProjects )

                        .AvailableTags = .PipelineEnabledProjects
                            + .SDKNames
                            + .PipelineTags
                            + .ProjectTags
                            + .'PipelineAvailableProjects_$PipelineIdentifier$'

                        .ProjectRequires + { 'Android' }
                        .ProjectAndroidRequires = { 'SDK-Android', 'Android-Gradle' }

                        If ( ( .RequiresAny_EmptyToken in .ProjectRequiresAny ) || ( .ProjectRequiresAny in .AvailableTags ) )
                        {
                            ^ProjectRequirementsSatisfied = true

                            ForEach( .Requirement in .ProjectRequires )
                            {
                                If ( .Requirement not in .AvailableTags )
                                {
                                    // Print( "INFO: $ProjectName$ is missing requirement `$Requirement$` for ($PipelinePlatform$-$PipelineConfig$-$PipelineToolchain$)" )
                                    ^ProjectRequirementsSatisfied = false
                                }
                            }

                            ^GradleProjectRequirementsSatisfied = .ProjectRequirementsSatisfied
                            ForEach( .Requirement in .ProjectAndroidRequires )
                            {
                                If ( .Requirement not in .AvailableTags )
                                {
                                    // Print( "INFO: $ProjectName$ is missing requirement `$Requirement$` for ($PipelinePlatform$-$PipelineConfig$-$PipelineToolchain$)" )
                                    ^GradleProjectRequirementsSatisfied = false
                                }
                            }
                        }

                        If ( .ProjectRequirementsSatisfied )
                        {
                            ForEach ( .Requirement in .PipelineProjectRequirements )
                            {
                                If ( .Requirement not in .ProjectTags )
                                {
                                    // Print( "INFO: $ProjectName$ is not enabled for ($PipelinePlatform$-$PipelineConfig$-$PipelineToolchain$) missing `$Requirement$`" )
                                    ^ProjectRequirementsSatisfied = false
                                    ^GradleProjectRequirementsSatisfied = false
                                }
                            }
                        }

                        If ( .ProjectDeploy == false )
                        {
                            ^GradleProjectRequirementsSatisfied = false
                        }
                    }

                    If ( .ProjectRequirementsSatisfied )
                    {
                        .ProjectTarget = '$ProjectName$-$PipelineName$-$PipelinePlatform$-$PipelineConfig$-$PipelineToolchain$'

                        .OutDirName = .'KindOutDir_$ProjectKind$'
                        .TargetExtension = .'OutputExtension_$ProjectKind$'

                        .TargetIntermediateDirectory = '$WorkspaceBuildDir$/obj/$PipelineName$/$PipelinePlatform$-$PipelineConfig$-$PipelineToolchain$/$ProjectName$'
                        .TargetOutputDirectory = '$WorkspaceBuildDir$/$OutDirName$/$PipelineName$/$PipelinePlatform$-$PipelineConfig$-$PipelineToolchain$/$ProjectName$'
                        .TargetDeployDirectory = '$WorkspaceBuildDir$/deploy/$ProjectName$/$PipelineName$-$PipelinePlatform$-$PipelineConfig$-$PipelineToolchain$'
                        .TargetAndroidOutputDirectory = .TargetOutputDirectory
                        .TargetAndroidDeployDirectory = .TargetDeployDirectory
                        .TargetOutputName = "$ProjectName$$TargetExtension$"

                        If ( .PipelineOutputDirSuffix != .EmptyString )
                        {
                            ^TargetOutputDirectory = '$TargetOutputDirectory$/$PipelineOutputDirSuffix$'
                            ^TargetDeployDirectory = '$TargetOutputDirectory$'
                        }

                        If ( .ProjectKind in .Kind_Libraries )
                        {
                            .Prefix = .'OutputPrefix_$ProjectKind$'
                            ^TargetOutputName = '$Prefix$$TargetOutputName$'
                        }

                        .ProjectConfig =
                        [
                            .Name = .ProjectName
                            .BasePath = .ProjectBasePath
                            .Config = .PipelineConfig
                            .Platform = .PipelinePlatform
                            .PipelineName = .PipelineName
                            .Target = .ProjectTarget

                            .OutputDir = .TargetOutputDirectory
                            .DeployDir = .TargetDeployDirectory
                            .AndroidOutputDir = .TargetAndroidOutputDirectory
                            .AndroidDeployDir = .TargetAndroidDeployDirectory
                            .TargetOutputName = .TargetOutputName
                            .Executable = "$TargetOutputDirectory$/$TargetOutputName$"
                            .DebugWorkingDir = .ProjectDebugDir
                        ]

                        .PipelineID = '$PipelineName$-$PipelinePlatform$-$PipelineConfig$-NDK$NDKVersion$'
                        .ProjectLibsExt =
                        [
                            .'Libs_$PipelineID$' = { .ProjectConfig }
                        ]
                        ^ProjectLibs + .ProjectLibsExt

                        // ^ProjectLibs + .ProjectLibs
                        // ^ProjectConfigs + .ProjectConfig
                    }

                    If ( .GradleProjectRequirementsSatisfied )
                    {
                        .ProjectTarget = '$ProjectName$-$PipelineName$-$PipelinePlatform$-$PipelineConfig$-$PipelineToolchain$'

                        .OutDirName = .'KindOutDir_$ProjectKind$'
                        .TargetExtension = .'OutputExtension_$ProjectKind$'

                        .TargetIntermediateDirectory = '$WorkspaceBuildDir$/obj/$PipelineName$/$PipelinePlatform$-$PipelineConfig$-$PipelineToolchain$/$ProjectName$'
                        .TargetOutputDirectory = '$WorkspaceBuildDir$/$OutDirName$/$PipelineName$/$PipelinePlatform$-$PipelineConfig$-$PipelineToolchain$/$ProjectName$'
                        .TargetDeployDirectory = '$WorkspaceBuildDir$/deploy/$ProjectName$/$PipelineName$-$PipelinePlatform$-$PipelineConfig$-$PipelineToolchain$'
                        .TargetAndroidOutputDirectory = .TargetOutputDirectory
                        .TargetAndroidDeployDirectory = .TargetDeployDirectory
                        .TargetOutputName = "$ProjectName$$TargetExtension$"

                        If ( .PipelineOutputDirSuffix != .EmptyString )
                        {
                            ^TargetOutputDirectory = '$TargetOutputDirectory$/$PipelineOutputDirSuffix$'
                            ^TargetDeployDirectory = '$TargetOutputDirectory$'
                        }

                        If ( .ProjectKind in .Kind_Libraries )
                        {
                            .Prefix = .'OutputPrefix_$ProjectKind$'
                            ^TargetOutputName = '$Prefix$$TargetOutputName$'
                        }

                        .ProjectConfig =
                        [
                            .Name = .ProjectName
                            .BasePath = .ProjectBasePath
                            .Config = .PipelineConfig
                            .Platform = .PipelinePlatform
                            .PipelineName = .PipelineName
                            .Target = .ProjectTarget

                            .Android =
                            [
                                .MinSDK = .AndroidAPILevel
                                .TargetSDK = .AndroidAPILevel
                                .NDKVersion = .NDKVersion

                                Using( .ProjectAndroid )
                                .CompileSDK = ^AndroidAPILevel

                                If ( .AndroidAPILevel != ^AndroidAPILevel )
                                {
                                    Error( "'AndroidAPILevel' can only be set as a Pipeline property. Do NOT set this value in the project!" )
                                }

                                If ( .TargetSDK < .CompileSDK )
                                {
                                    Error( "'TargetSDK' ($TargetSDK$) cannot be below 'AndroidAPILevel' ($CompileSDK$)" )
                                }
                                If ( .MinSDK > .CompileSDK )
                                {
                                    Error( "'MinSDK' ($MinSDK$) cannot be higher than 'AndroidAPILevel' ($CompileSDK$)" )
                                }
                            ]

                            .OutputDir = .TargetOutputDirectory
                            .DeployDir = .TargetDeployDirectory
                            .AndroidOutputDir = .TargetAndroidOutputDirectory
                            .AndroidDeployDir = .TargetAndroidDeployDirectory
                            .Executable = "$TargetOutputDirectory$/$TargetOutputName$"
                            .DebugWorkingDir = .ProjectDebugDir
                        ]

                        ^ProjectConfigs + .ProjectConfig
                    }
                }
            }

            ^PipelineEnabledProjects + .ProjectName
        }


        {
            .PipelineLines = { '[pipelines]' }
            .PipelineLibs = { }
            .LibsLines = { }

            Using( .ProjectLibs )
            ForEach( .Entry in .List )
            {
                ^PipelineLines
                    + '$Entry$'

                ^PipelineLibs
                    + ' '
                    + '[$Entry$]'

                .Libs = .'Libs_$Entry$'
                ForEach( .Lib in .Libs )
                {
                    Using( .Lib )
                    ^PipelineLibs
                        + '$Target$'

                    ^LibsLines
                        + ' '
                        + '[$Target$]'
                        + 'name=$TargetOutputName$'
                        + 'path=$Executable$'
                }
            }

            TextFile( 'android-libs' )
            {
                .TextFileOutput = '$WorkspaceBuildDir$/android_libs.txt'
                .TextFileAlways = false

                .TextFileInputStrings = { ':: IBT Generated File ::' }
                    + ' '
                    + .PipelineLines
                    + .PipelineLibs
                    + .LibsLines
            }
        }

        .TargetsLines = { }
        .DetailTargetLines = { }
        ForEach( .Config in .ProjectConfigs )
        {
            Using( .Config )

            ^TargetsLines + .Target
            ^DetailTargetLines
                + ' '
                + '[$Target$]'
                + 'executable=$Executable$'
                + 'output_dir=$OutputDir$'
                + 'deploy_dir=$DeployDir$'
                + 'working_dir=$DebugWorkingDir$'
                + 'source_dir=$BasePath$'
                + 'platform=$Platform$'
                + 'config=$Config$'
                + 'pipeline=$PipelineName$'
                + 'name=$Name$'

            .Dependencies = { }
            Using( .Android )
            ^DetailTargetLines
                + ' '
                + 'android_output_dir=$AndroidOutputDir$'
                + 'android_deploy_dir=$AndroidDeployDir$'
                + 'android_module=$Name$'
                + 'android_compilesdk=$CompileSDK$'
                + 'android_minsdk=$MinSDK$'
                + 'android_targetsdk=$TargetSDK$'
                + 'android_namespace=$Namespace$'
                + 'android_applicationid=$ApplicationID$'
                + 'android_versioncode=$VersionCode$'
                + 'android_versionname=$VersionName$'
                + 'android_ndkversion=$NDKVersion$'
                + ' '

            ^DetailTargetLines + '[$Target$-Android-Dependencies]'
            ForEach( .Dependency in .Dependencies )
            {
                ^DetailTargetLines + .Plugin
            }

            ^DetailTargetLines + '[$Target$-Gradle-Plugins]'
            ForEach( .Plugin in .GradlePlugins )
            {
                ^DetailTargetLines + .Plugin
            }
        }

        TextFile( 'android-gradle-projects' )
        {
            .TextFileOutput = '$WorkspaceBuildDir$/android_targets.txt'
            .TextFileAlways = false

            .TextFileInputStrings = { ':: IBT Generated File ::' }
                + ' '
                + '[android_targets]'
                + .TargetsLines
                + ' '
                + .DetailTargetLines
        }

        Alias( 'android-targets' )
        {
            .Targets = { 'android-gradle-projects', 'android-libs' }
        }
    }
}
